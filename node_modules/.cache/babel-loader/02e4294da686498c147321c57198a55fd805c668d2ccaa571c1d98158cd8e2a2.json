{"ast":null,"code":"var _jsxFileName = \"/Users/jalynderry/Desktop/UT/Sp23/hci/p3/p3-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WeatherApp() {\n  _s();\n  const BASE_ATX_URL = \"https://api.open-meteo.com/v1/forecast?latitude=30.27&longitude=-97.74&hourly=temperature_2m\";\n  const [temp, setTemp] = useState();\n  let displayData;\n  // function pullJson() {\n  //   fetch(BASE_ATX_URL)\n  //     .then(response => response.json())\n  //     .then(responseData => {\n  //       displayData = makeDict(responseData.hourly)\n  //       //console.log(responseData.hourly.time[0])\n  //       setValue(displayData)\n  //   })\n  //   //return\n  // }\n\n  async function pullJson() {\n    const response = await fetch(BASE_ATX_URL);\n    const responseData = await response.json();\n    console.log(\"Before the print of hourly\");\n    console.log(responseData.hourly);\n    let timeArr = responseData.hourly.time;\n    let tempArr = responseData.hourly.temperature_2m;\n    console.log(timeArr[0]);\n    //setTemp(timeArr)\n    //setTemp(responseData.hourly)\n    // let dict = makeDict(responseData.hourly)\n    // console.log(\"Outside of function\")\n    // console.log(dict)\n  }\n\n  // function makeDict(timeArr, tempArr) {\n  //   let i = 0\n  //   var returnData = new Object();\n  //   while (i < respData.time.length) {\n  //     returnData[respData.time] = respData.temperature_2m\n  //   }\n  // }\n  // useEffect(() => {\n  //   pullJson()\n  // })\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Hello World \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", temp, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(WeatherApp, \"pADxlUw/oLMDQ0dxHV0Eo7D1Eps=\");\n_c = WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherApp","_s","BASE_ATX_URL","temp","setTemp","displayData","pullJson","response","fetch","responseData","json","console","log","hourly","timeArr","time","tempArr","temperature_2m","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jalynderry/Desktop/UT/Sp23/hci/p3/p3-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nexport default function WeatherApp() {\n  const BASE_ATX_URL = \"https://api.open-meteo.com/v1/forecast?latitude=30.27&longitude=-97.74&hourly=temperature_2m\"\n  const [temp, setTemp] = useState()\n  let displayData\n  // function pullJson() {\n  //   fetch(BASE_ATX_URL)\n  //     .then(response => response.json())\n  //     .then(responseData => {\n  //       displayData = makeDict(responseData.hourly)\n  //       //console.log(responseData.hourly.time[0])\n  //       setValue(displayData)\n  //   })\n  //   //return\n  // }\n\n  async function pullJson() {\n    const response = await fetch(BASE_ATX_URL)\n    const responseData = await response.json()\n    console.log(\"Before the print of hourly\")\n    console.log(responseData.hourly);\n    let timeArr = responseData.hourly.time\n    let tempArr = responseData.hourly.temperature_2m\n    console.log(timeArr[0])\n    //setTemp(timeArr)\n    //setTemp(responseData.hourly)\n    // let dict = makeDict(responseData.hourly)\n    // console.log(\"Outside of function\")\n    // console.log(dict)\n  }\n\n  // function makeDict(timeArr, tempArr) {\n  //   let i = 0\n  //   var returnData = new Object();\n  //   while (i < respData.time.length) {\n  //     returnData[respData.time] = respData.temperature_2m\n  //   }\n  // }\n  // useEffect(() => {\n  //   pullJson()\n  // })\n\n\n  return (<>\n    <h2> Hello World </h2>\n    <p> {temp} </p>\n  </>)\n}\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,YAAY,GAAG,8FAA8F;EACnH,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,EAAE;EAClC,IAAIW,WAAW;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,eAAeC,QAAQA,CAAA,EAAG;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,YAAY,CAAC;IAC1C,MAAMO,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAC1CC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCD,OAAO,CAACC,GAAG,CAACH,YAAY,CAACI,MAAM,CAAC;IAChC,IAAIC,OAAO,GAAGL,YAAY,CAACI,MAAM,CAACE,IAAI;IACtC,IAAIC,OAAO,GAAGP,YAAY,CAACI,MAAM,CAACI,cAAc;IAChDN,OAAO,CAACC,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;IACvB;IACA;IACA;IACA;IACA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBAAQjB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACNrB,OAAA;MAAAqB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBzB,OAAA;MAAAqB,QAAA,GAAG,GAAC,EAACf,IAAI,EAAC,GAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA,gBACd;AACL;AAACrB,EAAA,CA9CuBD,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}