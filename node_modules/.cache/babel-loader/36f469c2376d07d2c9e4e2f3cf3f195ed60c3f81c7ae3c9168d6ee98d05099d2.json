{"ast":null,"code":"var _jsxFileName = \"/Users/jalynderry/Desktop/UT/Sp23/hci/p3/p3-app/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function WeatherApp() {\n  _s();\n  const BASE_ATX_URL = \"https://api.open-meteo.com/v1/forecast?latitude=30.27&longitude=-97.74&hourly=temperature_2m\";\n  const [time, setTime] = useState([]);\n  const [temp, setTemp] = useState([]);\n  //let temperatureMap = new Map();\n  let displayData;\n  // function pullJson() {\n  //   fetch(BASE_ATX_URL)\n  //     .then(response => response.json())\n  //     .then(responseData => {\n  //       displayData = makeDict(responseData.hourly)\n  //       //console.log(responseData.hourly.time[0])\n  //       setValue(displayData)\n  //   })\n  //   //return\n  // }\n\n  async function pullJson() {\n    const response = await fetch(BASE_ATX_URL);\n    const responseData = await response.json();\n    // console.log(\"Before the print of hourly\")\n    // console.log(responseData.hourly);\n    let timeArr = responseData.hourly.time;\n    let tempArr = responseData.hourly.temperature_2m;\n    // console.log(timeArr)\n\n    //otherFunction(timeArr, tempArr)\n    // console.log({temp})\n    setTemp(prevTemps => [...prevTemps, {\n      time: timeArr,\n      temperature: tempArr\n    }]);\n    // setTemp(time: timeArr)\n    //setTemp(responseData.hourly)\n    // let dict = makeDict(responseData.hourly)\n    // console.log(\"Outside of function\")\n    // console.log(dict)\n  }\n\n  function otherFunction(arr1, arr2) {\n    // console.log(\"This is arr1\")\n    // console.log(arr1)\n    // console.log(\"This is array 2\")\n    // console.log(arr2)\n    const tempMap = new Map();\n    let i = 0;\n    while (i < 10) {\n      //tempMap.set(arr1[i].substring(12), arr2[i])\n      setTemp(prevTemps => [...prevTemps, {\n        time: arr1[i].substring(12),\n        temperature: arr2[i]\n      }]);\n      i++;\n      // console.log(\"inside while loop with i= \" + i);\n      // console.log({temp})\n    }\n  }\n\n  useEffect(() => {\n    pullJson();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Hello World \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DataRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Goodbye\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n  function DataRow() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: temp.map(item => {\n        /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.temperature\n        }, item.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(WeatherApp, \"7tHC/MA46vQQ5jKG+wJm8hzeuVk=\");\n_c = WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","WeatherApp","_s","BASE_ATX_URL","time","setTime","temp","setTemp","displayData","pullJson","response","fetch","responseData","json","timeArr","hourly","tempArr","temperature_2m","prevTemps","temperature","otherFunction","arr1","arr2","tempMap","Map","i","substring","children","fileName","_jsxFileName","lineNumber","columnNumber","DataRow","map","item","_c","$RefreshReg$"],"sources":["/Users/jalynderry/Desktop/UT/Sp23/hci/p3/p3-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nexport default function WeatherApp() {\n  const BASE_ATX_URL = \"https://api.open-meteo.com/v1/forecast?latitude=30.27&longitude=-97.74&hourly=temperature_2m\"\n  const [time, setTime] = useState([]);\n  const [temp, setTemp] = useState([]);\n  //let temperatureMap = new Map();\n  let displayData\n  // function pullJson() {\n  //   fetch(BASE_ATX_URL)\n  //     .then(response => response.json())\n  //     .then(responseData => {\n  //       displayData = makeDict(responseData.hourly)\n  //       //console.log(responseData.hourly.time[0])\n  //       setValue(displayData)\n  //   })\n  //   //return\n  // }\n\n  async function pullJson() {\n    const response = await fetch(BASE_ATX_URL)\n    const responseData = await response.json()\n    // console.log(\"Before the print of hourly\")\n    // console.log(responseData.hourly);\n    let timeArr = responseData.hourly.time\n    let tempArr = responseData.hourly.temperature_2m\n    // console.log(timeArr)\n    \n    //otherFunction(timeArr, tempArr)\n    // console.log({temp})\n    setTemp((prevTemps) => [...prevTemps, {\n      time: timeArr,\n      temperature: tempArr }\n  ]);\n    // setTemp(time: timeArr)\n    //setTemp(responseData.hourly)\n    // let dict = makeDict(responseData.hourly)\n    // console.log(\"Outside of function\")\n    // console.log(dict)\n  }\n\n  function otherFunction(arr1, arr2) {\n    // console.log(\"This is arr1\")\n    // console.log(arr1)\n    // console.log(\"This is array 2\")\n    // console.log(arr2)\n    const tempMap = new Map();\n    let i = 0;\n    while (i < 10) {\n      //tempMap.set(arr1[i].substring(12), arr2[i])\n      setTemp((prevTemps) => [...prevTemps, {\n          time: arr1[i].substring(12),\n          temperature: arr2[i] }\n      ]);\n      i++;\n      // console.log(\"inside while loop with i= \" + i);\n      // console.log({temp})\n    }\n  }\n  \n  useEffect(() => {\n    pullJson()\n  })\n\n\n  return (<>\n    <h2> Hello World </h2>\n    < DataRow />\n    <h2> Goodbye</h2>\n  </>)\n\n  function DataRow() {\n    return (\n      <div>{\n        temp.map(item => {\n          <p key={item.time}>{item.temperature}</p>\n      })}\n      </div>\n    )\n  }\n}\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,YAAY,GAAG,8FAA8F;EACnH,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,IAAIa,WAAW;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,eAAeC,QAAQA,CAAA,EAAG;IACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACR,YAAY,CAAC;IAC1C,MAAMS,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAC1C;IACA;IACA,IAAIC,OAAO,GAAGF,YAAY,CAACG,MAAM,CAACX,IAAI;IACtC,IAAIY,OAAO,GAAGJ,YAAY,CAACG,MAAM,CAACE,cAAc;IAChD;;IAEA;IACA;IACAV,OAAO,CAAEW,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE;MACpCd,IAAI,EAAEU,OAAO;MACbK,WAAW,EAAEH;IAAQ,CAAC,CACzB,CAAC;IACA;IACA;IACA;IACA;IACA;EACF;;EAEA,SAASI,aAAaA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACjC;IACA;IACA;IACA;IACA,MAAMC,OAAO,GAAG,IAAIC,GAAG,EAAE;IACzB,IAAIC,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAG,EAAE,EAAE;MACb;MACAlB,OAAO,CAAEW,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE;QAClCd,IAAI,EAAEiB,IAAI,CAACI,CAAC,CAAC,CAACC,SAAS,CAAC,EAAE,CAAC;QAC3BP,WAAW,EAAEG,IAAI,CAACG,CAAC;MAAE,CAAC,CACzB,CAAC;MACFA,CAAC,EAAE;MACH;MACA;IACF;EACF;;EAEA7B,SAAS,CAAC,MAAM;IACda,QAAQ,EAAE;EACZ,CAAC,CAAC;EAGF,oBAAQX,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBACN7B,OAAA;MAAA6B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBjC,OAAA,CAAEkC,OAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACZjC,OAAA;MAAA6B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA,gBAChB;EAEH,SAASC,OAAOA,CAAA,EAAG;IACjB,oBACElC,OAAA;MAAA6B,QAAA,EACErB,IAAI,CAAC2B,GAAG,CAACC,IAAI,IAAI;QACf,aAAApC,OAAA;UAAA6B,QAAA,EAAoBO,IAAI,CAACf;QAAW,GAA5Be,IAAI,CAAC9B,IAAI;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAwB;MAC7C,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI;EAEV;AACF;AAAC7B,EAAA,CA9EuBD,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}