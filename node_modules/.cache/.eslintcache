[{"/Users/jalynderry/Desktop/UT/Sp23/hci/p3/cs378-p3/src/index.js":"1","/Users/jalynderry/Desktop/UT/Sp23/hci/p3/cs378-p3/src/App.js":"2","/Users/jalynderry/Desktop/UT/Sp23/hci/p3/cs378-p3/src/reportWebVitals.js":"3"},{"size":549,"mtime":1677513750173,"results":"4","hashOfConfig":"5"},{"size":4768,"mtime":1677534951694,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1677473627674,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"104bf78",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jalynderry/Desktop/UT/Sp23/hci/p3/cs378-p3/src/index.js",[],[],"/Users/jalynderry/Desktop/UT/Sp23/hci/p3/cs378-p3/src/App.js",["18","19"],[],"import './App.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nexport default function WeatherApp() {\n  const BASE_ATX_URL = \"https://api.open-meteo.com/v1/forecast?latitude=30.27&longitude=-97.74&hourly=temperature_2m\"\n  const BASE_DAL_URL = \"https://api.open-meteo.com/v1/forecast?latitude=32.78&longitude=-96.81&hourly=temperature_2m\"\n  const BASE_HOU_URL = \"https://api.open-meteo.com/v1/forecast?latitude=29.76&longitude=-95.36&hourly=temperature_2m\"\n  const GEO_CODING_STUB = \"https://geocoding-api.open-meteo.com/v1/search?name=\"\n  const [time, setTime] = useState([]);\n  const [temp, setTemp] = useState([]);\n  let displayData\n  \n\n  async function pullJson(URL) {\n    const response = await fetch(URL)\n    const responseData = await response.json()\n    let timeArr = responseData.hourly.time\n    let tempArr = responseData.hourly.temperature_2m\n    setTime(timeArr);\n    setTemp(tempArr);\n  }\n\n  useEffect(() => {\n    pullJson(BASE_ATX_URL)\n    let cityHeader = document.getElementById(\"currentCityHeader\");\n    cityHeader.innerText = \"Austin\"\n  }, []);\n\n  function onClickATX() {\n    pullJson(BASE_ATX_URL)\n    let cityHeader = document.getElementById(\"currentCityHeader\");\n    cityHeader.innerText = \"Austin\"\n  }\n\n  function onClickDAL() {\n    pullJson(BASE_DAL_URL)\n    let cityHeader = document.getElementById(\"currentCityHeader\");\n    cityHeader.innerText = \"Dallas\"\n  }\n\n  function onClickHOU() {\n    pullJson(BASE_HOU_URL)\n    let cityHeader = document.getElementById(\"currentCityHeader\");\n    cityHeader.innerText = \"Houston\"\n  }\n\n  return (<>\n    <div class=\"container\">\n      <ThreeCityButtons />\n      <CityInput />\n      <CurrentCityHeader />\n      <ForecastHeader />\n      < DataSet />\n    </div>\n  </>)\n\n  function CityInput() {\n    return (\n      <div>\n        <input type=\"text\" id=\"searchCity\" name=\"city\" placeholder=\"Input City Name\" />\n        <button id=\"searchCityBtn\" onClick={() => getCustomCity()}> Get Weather </button>\n      </div>\n    )\n  }\n\n  function getCustomCity() {\n    const inputCity = document.getElementById(\"searchCity\").value\n    let cityHeader = document.getElementById(\"currentCityHeader\");\n    cityHeader.innerText = inputCity\n    let encodedCityName = encodeURI(inputCity)\n    const CUSTOM_URL = GEO_CODING_STUB + encodedCityName\n    pullCustomJson(CUSTOM_URL)\n  }\n\n  async function pullCustomJson(URL) {\n    const response = await fetch(URL)\n    const responseData = await response.json()\n    if (responseData.results != null) {\n      let lat = responseData.results[0].latitude\n      let long = responseData.results[0].longitude\n      buildCustomJsonURL(long, lat)\n    } else {\n      alert (\"Not a Valid City\")\n    }\n  }\n\n  function buildCustomJsonURL(long, lat) {\n    const beginningURL = \"https://api.open-meteo.com/v1/forecast?latitude=\"\n    const middleURL = \"&longitude=\"\n    const endURL = \"&hourly=temperature_2m&temperature_unit=fahrenheit\"\n    const CUSTOM_URL = beginningURL + lat + middleURL + long + endURL\n    pullJson(CUSTOM_URL)\n  }\n\n  function ThreeCityButtons() {\n    return (\n      <div class=\"row\">\n        <div class=\"col\">\n          <button id=\"ATX-btn\" class=\"cityBtn\" onClick={onClickATX}> <b> Austin </b> </button>\n        </div>\n        <div class=\"col\">\n          <button id=\"DAL-btn\" class=\"cityBtn\" onClick={onClickDAL}> <b> Dallas </b> </button>\n        </div>\n        <div class=\"col\">\n          <button id=\"HOU-btn\" class=\"cityBtn\" onClick={onClickHOU}> <b> Houston </b> </button>\n        </div>\n      </div>\n    )\n  }\n\n  function CurrentCityHeader() {\n    let cityName = \"\"\n    if (document.getElementById(\"currentCityHeader\") == null) {\n      cityName = \"<Unknown City Name>\"\n    } else {\n      cityName = document.getElementById(\"currentCityHeader\").innerText\n    }\n    return (\n      <div id=\"cityHeader\">\n        Weather for <var id=\"currentCityHeader\"><b>{cityName}</b></var>\n      </div>\n    )\n  }\n\n  function ForecastHeader() {\n    return (\n      <div class=\"row forecast\" >\n        <div class=\"col-4\">\n          <b>Time</b>\n        </div>\n        <div class=\"col\">\n          <b>Temperature</b>\n        </div>\n      </div>\n    )\n  }\n\n  function DataRow({ idx }) {\n    let returnValue = ''\n    if (temp.length != 0) {\n      returnValue = (\n        <div class=\"row forecast forecaseData\">\n          <div class=\"col-4\">\n            {time[idx].substring(11)}\n          </div>\n          <div class=\"col\">\n            {temp[idx]} F\n          </div>\n        </div>\n      )\n    } else {\n      returnValue = <p> Nothing populated yet </p>\n    }\n    return (\n      returnValue\n    )\n  }\n\n  function DataSet() {\n    const returnValue = [];\n    for (let i = 8; i < 24; i++) {\n      returnValue.push(<DataRow idx={i} />)\n    }\n    return returnValue\n  }\n  \n}\n","/Users/jalynderry/Desktop/UT/Sp23/hci/p3/cs378-p3/src/reportWebVitals.js",[],[],{"ruleId":"20","severity":1,"message":"21","line":13,"column":7,"nodeType":"22","messageId":"23","endLine":13,"endColumn":18},{"ruleId":"24","severity":1,"message":"25","line":142,"column":21,"nodeType":"26","messageId":"27","endLine":142,"endColumn":23},"no-unused-vars","'displayData' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]